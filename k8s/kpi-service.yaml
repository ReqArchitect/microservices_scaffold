apiVersion: v1
kind: ConfigMap
metadata:
  name: kpi-service-config
  namespace: reqarchitect
data:
  SERVICE_NAME: "kpi_service"
  SERVICE_PORT: "5003"
  API_VERSION: "v1"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kpi-db-pvc
  namespace: reqarchitect
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kpi-db
  namespace: reqarchitect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kpi-db
  template:
    metadata:
      labels:
        app: kpi-db
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "kpi_service"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: kpi-db-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: kpi-db-data
        persistentVolumeClaim:
          claimName: kpi-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kpi-db-service
  namespace: reqarchitect
spec:
  selector:
    app: kpi-db
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kpi-service
  namespace: reqarchitect
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kpi-service
  template:
    metadata:
      labels:
        app: kpi-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5003"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: kpi-service
        image: reqarchitect/kpi-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5003
        env:
        - name: DATABASE_URL
          value: "postgresql://postgres:password@kpi-db-service:5432/kpi_service"
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: kpi-service-config
              key: SERVICE_NAME
        - name: SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: kpi-service-config
              key: SERVICE_PORT
        - name: API_VERSION
          valueFrom:
            configMapKeyRef:
              name: kpi-service-config
              key: API_VERSION
        - name: JWT_SECRET_KEY
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: JWT_SECRET_KEY
        - name: CONSUL_HOST
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: CONSUL_HOST
        - name: CONSUL_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: CONSUL_PORT
        - name: JAEGER_HOST
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: JAEGER_HOST
        - name: JAEGER_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: JAEGER_PORT
        - name: TRACING_ENABLED
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: TRACING_ENABLED
        resources:
          limits:
            cpu: "200m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 5003
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 5003
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kpi-service
  namespace: reqarchitect
spec:
  selector:
    app: kpi-service
  ports:
  - port: 5003
    targetPort: 5003
  type: ClusterIP
